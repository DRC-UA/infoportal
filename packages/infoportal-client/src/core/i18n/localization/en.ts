import {formatDistance, formatDuration as formatDurationFns} from 'date-fns'
import {appConfig} from '@/conf/AppConfig'
import {capitalize, DrcProgram, OblastIndex, OblastISO, Person} from 'infoportal-common'

const invalidDate = ''

export const isDateValid = (d?: Date): boolean => {
  return !!d && d instanceof Date && !isNaN(d.getTime())
}

export const formatDate = (d?: Date): string => {
  if (!isDateValid(d)) return invalidDate
  return d!.toLocaleDateString()
}

export const formatTime = (d?: Date): string => {
  if (!isDateValid(d)) return invalidDate
  return d!.toLocaleTimeString()
}

export const formatDateTime = (d?: Date): string => {
  if (!isDateValid(d)) return invalidDate
  return formatDate(d) + ' ' + formatTime(d)
}

export const dateFromNow: {
  (d: Date): string
  (d?: undefined): undefined
  (d?: Date): string | undefined
} = (d) => {
  return d ? formatDistance(d, new Date(), {addSuffix: true}) : (undefined as any)
}

export const formatLargeNumber = (n?: number, options?: Intl.NumberFormatOptions): string => {
  return n !== undefined && n !== null && !isNaN(n) ? n.toLocaleString('en-EN', options) : '-'
}

export const formatDuration = formatDurationFns

export type Messages = (typeof en)['messages']

export const en = Object.freeze({
  formatDate,
  formatTime,
  formatDateTime,
  dateFromNow,
  formatDuration,
  formatLargeNumber,
  messages: {
    default: 'Default',
    snapshot: 'Snapshot',
    invalid: 'Invalid',
    others: 'Others',
    other: 'Other',
    majorStressFactors: 'Major stress factors',
    exist: 'Exist',
    notExist: 'Not exist',
    area: 'Area',
    men: 'Men',
    lightTheme: {
      light: 'Light',
      dark: 'Dark',
      auto: 'Device default',
    },
    activities: 'Activities',
    noComment: 'No comment',
    answers: 'Answers',
    seeResults: `See results`,
    updating: 'Updating',
    users: 'Users',
    link: 'Link',
    select3Outcomes: `Please, select 3 outcomes`,
    oblast: 'Oblast',
    edit: 'Edit',
    type: 'Type',
    editKobo: `Edit (⚠️ This is an unstable feature. Use it only if you have proper permission. It's still useful for viewing data from the Kobo interface).`,
    apply: 'Apply',
    clear: 'Clear',
    cache: 'Cache',
    serverCache: 'Server cache',
    cancel: 'Cancel',
    custom: 'Custom',
    close: 'Close',
    reinitialize: 'Reinitialize',
    connectAs: 'Connect as',
    focalPoint: 'Focal point',
    budget: 'Budget',
    project: 'Project',
    column: 'Column',
    name: 'Name',
    hhName: 'HH Name',
    violence: 'Violence',
    copyingMechanisms: 'Coping mechanisms',
    female: 'Female',
    settlement: 'Settlement',
    by: 'By',
    hhs: 'HHs',
    hohhAge: 'HoHH age',
    createdByAt: (by: string, at: string) => `Created by ${by} at ${at}`,
    updatedByAt: (by: string, at: string) => `Updated by ${by} at ${at}`,
    accessLevel: 'Access level',
    females: 'Females',
    paidOn: 'Paid on',
    lastStatusUpdate: 'Last status update',
    adultMen: 'Adult men',
    adultWomen: 'Adult women',
    boy: 'Boy',
    modality: 'Modality',
    partnerName: 'Partner Organization',
    drcStaff: 'DRC staff',
    girl: 'Girl',
    save: 'Save',
    somethingWentWrong: 'Something went wrong',
    yes: 'Yes',
    influencingFactors: 'Influencing factors',
    familyUnity: 'Family unity',
    city: 'City',
    no: 'No',
    contactAdmin: 'Contact:',
    office: 'Office',
    enumerator: 'Enumerator',
    disaggregation: 'Disaggregation',
    drcOffice: 'DRC office',
    question: 'Question',
    _ageGroup: {
      Quick: 'Quick',
      DRC: 'DRC',
      ECHO: 'ECHO',
      BHA: 'BHA',
      UNHCR: 'UNHCR',
    },
    kobo: 'Kobo',
    answer: 'Answer',
    calculations: 'Calculations',
    value: 'Value',
    percent: 'Percent',
    Flagged: 'Flagged',
    UnderReview: 'UnderReview',
    Pending: 'Pending',
    history: 'History',
    recap: 'Recap',
    Approved: 'Approved',
    updatingTag: (rowsCount: number, key: string, value: string) => `Updating ${key}=${value} on ${rowsCount} rows...`,
    cannotUpdateTag: (rowsCount: number, key: string, value: string) =>
      `Update failed for ${key}=${value} on ${rowsCount} rows. Table not edited.`,
    Rejected: 'Rejected',
    mykolaiv: 'Mykolaiv',
    lastConnectedAt: 'Last connection',
    validation: 'Validation',
    onlyPwds: 'Only PwDs',
    consideredAsPwd: 'Are not considered PwDs when the level of difficulty is not set or set to "No, no difficulty".',
    perpetrators: 'Perpetrators',
    kyiv: 'Kyiv',
    view: 'View',
    continue: 'Continue',
    viewData: 'View data',
    theme: 'Dark theme',
    format: 'Format',
    previous: 'Previous',
    filter: 'Filter',
    distinct: 'Distinct',
    noneFormatted: '<i>None</i>',
    none: 'None',
    filterPlaceholder: 'Filter...',
    count: 'Count',
    sum: 'Sum',
    average: 'Average',
    avgMale: 'Average Male Age',
    avgFemale: 'Average Female Age',
    min: 'Min',
    max: 'Max',
    disabilities: 'Disabilities',
    minors: 'Minors',
    editAgain: 'Edit again',
    children: 'Children',
    PwD: 'PwD',
    PwDs: 'PwDs',
    next: 'Next',
    clearFilter: 'Clear filter',
    logout: 'Logout',
    youDontHaveAccess: `You don't have access. Contact alexandre.annic@drc.ngo`,
    share: 'Share',
    refresh: 'Refresh',
    refreshTable: 'Refresh current data',
    grantAccess: 'Grant access',
    title: 'InfoPortal (IP)',
    noDataAtm: 'No data at the moment',
    fileName: 'File name',
    subTitle: 'Ukraine',
    signIn: 'Sign-in',
    committed: 'Committed',
    pending: 'Pending',
    rejected: 'Rejected',
    blank: 'Blank',
    suggestion: 'Suggestion',
    signInDesc: 'With your DRC Microsoft account',
    viewDate: `View data`,
    information: 'Information',
    koboData: `Kobo data`,
    activity: 'Activity',
    nfis: 'NFIs',
    previewActivity: `Preview activity`,
    previewRequestBody: `Preview request body code`,
    nLines: (n: number) => `<b>${n}</b> lignes`,
    confirm: 'Confirm',
    delete: 'Delete',
    deleteSelected: `Delete selected`,
    downloadAsXLS: 'Download as XLS',
    downloadAsPdf: 'Download as PDF',
    all: 'All',
    details: 'Details',
    _datatable: {
      view: 'Views',
      createNewView: 'New view name...',
      viewPublic: 'Public',
      viewPublicDesc: 'Anyone can see and edit',
      viewLock: 'Sealed',
      viewLockDesc: 'Anyone can see, only you can edit',
      viewPrivate: 'Private',
      viewPrivateDesc: 'Only you can see and edit',
      idFilterInfo: 'You can filter by multiple IDs by separating each with a space',
      idFilterPlaceholder: 'ID1 ID2 ID3 [...]',
      toggleColumns: 'Show/hide columns',
    },
    areas: {
      north: 'North',
      east: 'East',
      south: 'South',
      west: 'West',
    },
    paid: 'Paid',
    start: 'Start',
    submissionStart: 'Submission start',
    end: 'End',
    filters: 'Filters',
    endIncluded: 'End (included)',
    typeOfSite: 'Type of site',
    version: 'Version',
    error: 'Error',
    create: 'Create',
    proxy: 'Proxy',
    proxyUrl: 'Proxy URL',
    proxyDestinationUrl: 'DestinationURL',
    enabled: 'Enabled',
    avgHHSize: 'Average household size',
    households: 'Households',
    hhType: 'HH Type',
    displacementStatus: 'Displacement status',
    householdStatus: 'Household Status',
    individuals: 'Individuals',
    uniqIndividuals: 'Unique individuals',
    individualsInterviewed: 'Individuals Interviewed',
    individualsAssistance: 'Individuals who used assistance',
    individualsTrained: 'Total People Trained',
    prePostProgress: 'Progress',
    avgBefore: 'Pre-test',
    avgAfter: 'Post-test',
    individualsProgress: 'DRC Staff Training Progress',
    injured: 'Injured victims',
    dead: 'Dead victims',
    teamConducted: 'Team',
    firstTraining: 'First Training',
    participants: 'Participants',
    participantsList: 'Participants list',
    participantsLoc: 'Participants by Location',
    submissions: 'Submissions',
    householdSize: 'Household size',
    occurrences: 'Occurrences',
    hhSize: 'HH size',
    dashboard: 'Dashboard',
    loading: 'Loading',
    passportSerie: 'Passport serie',
    price: 'Price',
    passportNumber: 'Passport number',
    taxIdOccurrences: 'Tax ID occurrences',
    phoneOccurrences: 'Phone occurrences',
    taxID: 'Tax ID',
    taxIdPhoto: 'Tax ID Photo',
    submittedAt: 'Submitted at',
    clearAll: 'Clear all',
    committedAt: 'Committed at',
    id: 'ID',
    idPhoto: 'ID Photo',
    back: 'Back',
    access: 'Access',
    accesses: 'Accesses',
    url: 'URL',
    confirmRemove: 'Confirm remove',
    confirmRemoveDesc: 'This action is permanent and cannot be undone',
    expireAt: 'Expire at',
    slug: 'Slug',
    try: 'Try',
    category: 'Category',
    origin: 'Origin',
    destination: 'Destination',
    invalidUrl: 'Invalid URL',
    mainConcerns: 'Main concern',
    accommodationCondition: 'Accommodation condition',
    tenureOfAccommodation: 'Accommodation tenure',
    housingStructure: 'Accommodation structure',
    firstPriorityNeed: '1st Priority needs',
    secondPriorityNeed: '2nd Priority needs',
    thirdPriorityNeed: '3rd Priority needs',
    selected: 'Selected',
    phone: 'Phone',
    payName: 'Payment contact name',
    payPhone: 'Payment contact phone',
    hhPhone: 'HH Phone',
    drcEmail: 'DRC Email',
    finance: 'Finance',
    decidingFactorsToReturn: 'Deciding factors to return',
    displacement: 'Displacement',
    originOblast: 'Oblast of origin',
    admin: 'Admin',
    inPerson: 'In person',
    online: 'Online',
    onlineTraining: 'Online Training',
    offline: 'Offline',
    offlineTraining: 'Offline Training',
    team: 'Training Participation by Sector (DRC staff only)',
    idpOriginOblast: 'Origin oblast of IDPs',
    currentOblast: 'Current oblast',
    idpPopulationByOblast: 'IDP population by oblast of origin and displacement',
    age: 'Age',
    submitAll: 'Submit all',
    submit: 'Submit',
    hohhOlder: 'HoHH 60+',
    changeAccount: 'Change account',
    lastName: 'Last name',
    change: 'Change',
    successfullyEdited: (n: number) => `Successfully edited ${n} rows.`,
    housing: 'Housing',
    table: 'Table',
    comparedToTotalAnswers: 'Based on total answers:',
    chart: 'Chart',
    group: 'Group',
    required: 'Required',
    invalidEmail: 'Invalid email',
    eligibility: 'Eligibility',
    vulnerability: 'Vulnerability',
    duration: 'Duration',
    byDuration: 'Training Participation by Duration',
    organisation: 'Organisation',
    byOrganisation: 'Training Participation by Organisation',
    notSpecified: 'Not specified',
    includeNotSpecified: 'include "Not Specified"',
    confirmYourOffice: (office: string) => `Confirm ${office} office`,
    itCannotBeChanged: (admin: string) =>
      `For privacy reasons, you will not be able to change it later without contacting ${admin}.`,
    select: 'Select',
    welcomePleaseSelectOffice: 'Welcome, select your DRC office:',
    firstName: 'First name',
    patronyme: 'Patronyme',
    data: 'Data',
    duplicate: 'Duplicate',
    serverId: 'Server ID',
    server: 'Server',
    scoring: 'Scoring',
    duplication: 'Duplication',
    deduplication: 'Deduplication',
    wfpDeduplication: 'WFP Deduplication',
    deduplications: 'Deduplications',
    hohhFemale: 'HoHH female',
    vulnerabilities: 'Vulnerabilities',
    selectAll: 'Select all',
    ageGroup: 'Age groups',
    avgAge: 'Average age',
    completed: 'Completed',
    ratio: 'Ratio',
    koboSubmissionTime: 'Kobo submission',
    absolute: 'Absolute',
    contact: (_: string) => `Contact <b>${_}</b>.`,
    intentions: 'Intentions',
    sex: 'Sex',
    daily: 'Daily',
    monthly: 'Monthly',
    months: 'Months',
    createdAt: 'Created at',
    visible: 'Visible',
    visibility: 'Visibility',
    hidden: 'Hidden',
    updatedAt: 'Updated at',
    returnToThePlaceOfHabitualResidence: 'Return to the place of habitual residence',
    currentStatus: 'Current status',
    status: 'Status',
    male: 'Male',
    adults: 'Adults',
    elderly: 'Elderly',
    elderlyMale: 'Elderly male',
    elderlyFemale: 'Elderly female',
    selectForm: 'Select form',
    selectData: 'Select Data',
    ukraine: 'Ukraine',
    location: 'Location',
    submissionTime: 'Submission',
    submittedBy: 'By',
    add: 'Add',
    case: 'Case',
    protectionMonitoringDashboard: 'Protection monitoring dashboard',
    undefined: 'Unknown',
    women: 'Women',
    coveredOblasts: 'Covered oblasts',
    coveredRaions: 'Covered raions',
    lackOfPersonalDoc: 'Individuals lacking personal documentation',
    lackOfHousingDoc: 'HHs lacking HLP documentation',
    sample: 'Sample overview',
    documentation: 'Documentation',
    livelihoods: 'Livelihoods',
    priorityNeeds: 'Priority Needs',
    hhWithoutIncome: 'No income',
    hhOutOfWork: 'Out of work',
    general: 'General',
    idpWithAllowance: 'IDPs w/ allowance',
    specificNeeds: 'Specific needs',
    propertyDamaged: 'Properties damaged due to conflict',
    email: 'Email',
    drcJob: 'DRC Job',
    assistance: 'Type of assistance',
    intentionToReturn: 'Intention to return',
    hhWithGapMeetingBasicNeeds: 'Basic needs gaps',
    unemployedMemberByOblast: 'By oblast population',
    Access: {
      giveAccessBy: 'Grant access by',
      jobAndOffice: 'Job and Office',
    },
    hhCategoryType: {
      idp: 'IDP',
      hohh60: 'Elderly HoHH',
      hohhFemale: 'Female HoHH',
      memberWithDisability: 'HH with PwD',
      all: 'Average',
    },
    shelter: 'Shelter',
    health: 'Health',
    cash: 'Cash',
    levelOfPropertyDamaged: 'Level of damage',
    damageCause: 'Damage cause',
    mainSourceOfIncome: 'Main source of income',
    employmentType: 'Type of employment',
    monthlyIncomePerHH: 'Average monthly income per HH',
    HHsLocation: 'HHs Location',
    idp: 'IDP',
    overview: 'Overview',
    requests: 'Requests',
    selectADatabase: 'Select a Kobo form',
    noIdp: 'Non-IDP',
    comparedToPreviousMonth: (n: number) => `Compared to ${n} days ago`,
    idps: 'IDPs',
    nonDisplaced: 'Non-displaced',
    refugeesAndReturnees: 'Refugees and returnees',
    poc: 'Person of concern',
    global: 'Global',
    description: 'Description',
    createdBy: 'Created by',
    donor: 'Donor',
    gender: 'Gender',
    respondentGender: 'Respondent gender',
    respondent: 'Respondent',
    program: 'Program',
    progress: 'Progress',
    points: 'Points',
    raion: 'Raion',
    relative: 'Relative',
    cumulative: 'Cumulative',
    hromada: 'Hromada',
    noIdps: 'Non-IDPs',
    register: 'Register',
    noIdpsOnly: 'Non-IDPs only',
    uaCitizen: 'UA citizen',
    appInMaintenance: "Application in maintenance, we'll be back soon.",
    comments: 'Comments',
    ukrainianCitizenShip: 'Ukrainian citizenship',
    hhBarriersToPersonalDocument: 'Experienced barriers to obtain civil documents',
    atLeastOneMemberWorking: 'HHs with at least one member working',
    peacebuildingTitle: 'Conflict Sensitivity Training Dashboard',
    trainingTrends: 'Training Trends',
    trainingOfTrainers: 'Training of Trainers (ToT)',
    trained: 'Trained',
    facilitated: 'Facilitated',
    victimAssistanceTitle: 'Victim Assistance',
    _meal: {
      openTracker: 'Open Excel tracker',
      visitMonitoring: 'Visit Monitoring',
      verification: 'Verification',
      pdm: 'PDM',
      winterization: 'Winterization',
    },
    _protection: {
      safeDashboard: 'Safeguarding Dashboard',
      pseaDashboard: 'PSEAH Dashboard',
      cocCasesDashboard: 'CoC PowerBi Dashboard',
      trainings: 'Trainings',
      participants: 'Participants',
      avgParticipants: 'Avg Participants',
      participantsByLevel: 'Participants by level',
      participantsBySector: 'Participants by sector',
      psea: 'PSEA',
      pseaTrainingDone: 'Completed',
      pseaTrainingWaiting: 'Not completed yet',
      training: 'Training',
      pss: 'PSS Activity',
      pssFilter: 'Filter data by specific PSS activities.',
      filterEchoReporting: 'Filter duplication',
      filterEchoReportingDetails: (n: number) => `Skip ${n}% of HHS data to limit double counting.`,
      filterEchoReportingDisability: 'Filter with disability',
      filterEchoReportingDisabilityDetails: (n: number) => `Select ${n}% of individuals.`,
    },
    mealMonitoringVisit: {
      ecrec: 'ECREC activities',
      protection: 'Protection activities',
      eore: 'EORE activities',
      shelter: 'Shelter activities',
      lau: 'LAU activities',
      criticalConcern: 'Critical concern',
      nfiDistribution: 'NFI distributions',
      photoFolder: 'Photo folder',
      concerns: 'Concerns',
      securityConcerns: 'Security concerns',
      hasPriorityQueuesForVulnerableIndividuals: 'Priority queues for vulnerable individuals',
    },
    mealMonitoringPdm: {
      cashPdmDashboard: 'Cash',
      shelterPdmDashboard: 'Shelter',
      nfiPdmDashboard: 'Nfi',
      gbvPdmDashboard: 'Gbv',
      legalPdmDashboard: 'Legal',
      pssPdmDashboard: 'Pss',
      pdmType: 'PDM Type',
      sessionType: 'Session type',
      spentA: 'Spent?',
      method: 'Methodology group',
      general: 'General Information',
      solidFuel: 'Solid Fuel Group',
      received: 'Received?',
      type: 'Assistance',
      esk: 'Emergency Shelter kits',
      delivery: 'Delivery process',
      safeSolution: 'Safe and Dignified Shelter solutions',
      overcomeBarrier: 'Overcoming barriers to return',
      shelterConditions: 'Adequate shelter conditions',
      outcome: 'Outcome',
      accountabilityCRM: 'Accountability',
      manage: 'Did you manage to buy solid fuel?',
      spent: 'Have you spent the cash assistance you received yet?',
      spendOn: 'Did you spend the cash on what you received it for?',
      intended: 'If you did not spend the cash on what it was intended for, what did you spend it on?',
      whenPlan: 'When do you plan to use the assistance received?',
      assistanceReceived: 'Which type of assistance have you received?',
      kitReceived: 'Which type of kit have you received?',
      officeResponsible: 'Office responsible',
      priorityNeeds: 'Priority needs',
      outcomeAssistance: 'Outcome of Assistance',
      accountability: 'Accountability to Affected Populations (AAP)',
      needsShelter: 'Contents of the kit meet your immediate needs?',
      cashOrKind: 'Did you prefer the cash modality or in-kind assistance?',
      receiveLess:
        'If you were told how much money you would receive - Did you receive less, the same or more money than the amount you were told you would be receiving?',
      assistancePrefer: 'Preferred method of receiving assistance',
      assistanceReceive: 'Method of delivering assistance',
      peopleExclude:
        'Do you know of people needing repair/insulation assistance who were excluded from the assistance?',
      correspondNeeds: 'Assistance received correspond with needs',
      conditionsImproved: 'Living conditions improved after assistance',
      houseActivities: 'After repairs you are able to conduct essential household activities',
      warmComfort: 'Able to make at least one living area warm',
      thermalComfort: 'Assistance helped to improve thermal comfort',
      materialSat: 'Satisfied with the materials',
      similarPss: 'Have you received similar PSS session before?',
      rateSession: 'How would you rate that similar session that you had before?',
      rateExperience: 'Overall, how would you rate your experience of the activities in this  PSS session?',
      overallHelpful: 'Overall, do you find DRС PSS sessions were helpful?',
      satWithActivity: 'Are you satisfied with the activities provided?',
      satActivityBad: 'If ‘Mostly yes, Not really/not at all’: Would you mind telling us why you are not satisfied?',
      emotionalBenefit: 'Did you feel any emotional benefits from attending to the PSS sessions?',
      feelIntegrated: 'Did you feel integrated during the sessions by the facilitators?',
      rateQuality: 'Rating of the quality of the repair works performed on the scale from 1 to 5',
      howMuchTake:
        'How much time did it take from the moment your household registered into the CASH assistance program to the moment you actually received the money in your bank account?',
      idpConflict: 'IDP/conflict-affected person',
      helpedThermal: 'Helped to improve thermal comfort for your hh',
      satisfiedAssistance: 'Satisfied with assistance',
      satisfiedAmount: 'Satisfied with cash amount',
      satisfiedQuality: 'Satisfied with quality of items in kit',
      satisfiedKits: 'Satisfied with kits received',
      satisfiedNumber: 'Satisfied with quantity of items in kit',
      howMuch: 'Told how much money you will receive',
      provideFeedback: 'If "Yes", have you provided any feedback/ suggestions, complaints, or questions?',
      respond: 'Has someone from DRC responded to your complaint or question?',
      notProvide: 'If "No did not provide any", why?',
      feedback: 'Feedback',
      address:
        'Do you know how and where you could address your suggestions, feedback or complaints regarding the work of the DRC, if any?',
      outstandingNeeds: 'Outstanding needs',
      satisfiedProcess: 'Satisfied with process',
      inAdvance: 'Were you informed in advance about the amount you would receive?',
      whichType: 'Which type of assistance have you received?',
      assistanceCorrespond: 'Did the amount received correspond to one communicated to you?',
      isEnough: 'Is it enough for your HH whole winter season 24-25?',
      longCover: 'For how long will the assistance cover your heating needs?',
      access: 'Do you have access to basic facilities (electricity, water, gas)?',
      correspond: 'Cash received correspond to the amount was told',
      eskContent: 'Satisfied with the ESK content',
      eskUseful: 'Satisfied with usefulness of kits',
      findUseful: 'Did you find the kits useful?',
      timeToTake: 'How much time did it take from the registration till receiving',
      fuelCommon: 'What type of heating fuel is most common in your community?',
      contentEnough: 'Is the contents of the kit enough to last 3 months?',
      qualityKit: 'Satisfied with the quality items in the kit?',
      timely: 'Assistance provided under project timely for you?',
      metersPerson: 'At least 3.5 square meters per person of space',
      suitable: 'Repair solution provided are good quality for your local conditions',
      ableToFind: 'Able to find good quality materials for your local conditions',
      cultural: 'Shelter solution culturally acceptable',
      insulation: 'Repairs or insulation have been done safely/makes your home secure',
      coverBasic: 'Currently able to cover your basic needs',
      culturalNeeds: 'Repaired/insulated premises meet your cultural or personal needs',
      anotherLoc: 'Do you have to live in another location because of damages?',
      enableReturn: 'Enabled to return to your house because of the repairs we provided?',
      preferFuture: 'How would your household prefer to receive shelter assistance in the future?',
      sleepSpace: 'Have appropriate sleeping space',
      wishesConsider: 'Wishes and needs considered during the planning and provision',
      largelySecure: 'The place where you live is largely secure',
      howInvolved: 'How were you involved in the repairs/insulation of your home?',
      quantityKit: 'Do you think the quantity given for each item is sufficient?',
      provideInfo: 'Provided all needed info',
      assistanceRegister: 'Registered',
      problems: 'Experienced problems',
      betterInform: 'Steps for improvement',
      doneBetter: 'What could DRC have done to better inform you about the assistance or distribution?',
      overallEvaluate: 'Overall, how would you evaluate the process of assistance delivery?',
      assistanceEnough: 'Enough to cover the expenditures',
      assistance: 'Who assisted',
      stay: 'Have access to adequate housing after receiving the cash assistance',
      carryKit: 'How did you carry your kit that you received?',
      treated: 'Treated with respect',
      respect: 'Did you feel that the DRC staff treated you with respect during the  sessions?',
      wellInformPss: 'Did you feel well informed about the PSS service available?',
      safePss: 'Did you feel safe during the PSS sessions?',
      pssExcluded: 'Do you know of people needing PSS who were excluded from this activity provided?',
      anyRisk: 'Been exposed to any risk as a consequence of receiving the CASH',
      interview: 'Type of interview',
      repaired: 'Satisfied with the repaired premises',
      spentCash: 'Spent the cash assistance received yet',
      cashAssistance: 'Cash assistance',
      whoAssisted: 'Who assisted with the house repairs',
      whatSpent: 'What have you spent the money you received on?',
      coverEnough: 'Was the cash assistance enough to cover the cost of the repairs you agreed to do?',
      useBrochure: 'Did you use the brochure provided as guidance on how to spend money on repairs?',
      hadQuestions:
        'If you had questions about how to complete the repairs to your home, did you feel able to reach out to DRC engineers for technical support?',
      kitContentTold: 'The items in kit corresponds to the content you were told?',
      hlpIssues: 'Do you have any legal and property (HLP) issues regarding your  current accommodation?',
      usedEsk: 'Have you used the provided Emergency Shelter Kit?',
      itemsEskUsed: 'Have you used any of the items in the kit?',
      relevant: 'Was the kit you’ve received relevant to your needs?',
      overall: 'Overall, are satisfied with the assistance provided by DRC?',
      implementation: 'Type of implementation',
      partner_type: 'Implementing partner',
      kits: 'Number of kits',
      info_used: 'Did you receive information on how to use the items in the dignity kits?',
      isPartner: 'Filled by partner?',
      feelSafe: 'Feel safe travelling to receive the assistance?',
      safeReceiving: 'Feel safe receiving the assistance',
      communication: 'Had sufficient communication from DRC staff about the assistance',
      legalIssue: 'Did the assistance received support in resolving the legal issue?',
      secondTime: 'Have you applied a second time for legal support with DRC or its partners to solve the issue?',
      benefits: 'Have you received any benefits or improvement in your daily life as a consequence of the assistance?',
      contactedAdd: 'Contacted additionally by lawyer to check on the outcome',
      incurFees: 'Have to incur any legal fees or expenses related to the solution',
      independtlyResolve: 'Could have independently resolved the issue without a free lawyer',
      infoUnderstandable: 'Information was clear, understandable',
      clearExplanation: 'Lawyer gave you clear explanations',
      provisionHelped:
        "Do you think the provision of legal aid has enhanced your and your family's wellbeing/ quality of life?",
      wellInformed: 'Did you feel well informed',
      planToStay: 'Are you planning on staying in your repaired house/apartment permanently?',
      howHear: 'How did you hear about DRC and it’s partners free legal assistance?',
      howReport:
        'Do you know how and where to report if a DRC employee requested something from you in exchange for receiving assistance, made you feel uncomfortable in anyway, or insulted you?',
      channel:
        'If you had a suggestion for, or a problem with the assistance/ service, do you think you could channel the suggestion or lodge a complaint?',
      contactedChannel: 'Have you contacted channels?',
      responded: 'To your knowledge have suggestions or complained raised been responded to or followed up?',
      putContact:
        'Were you immediately put in contact with a lawyer at the point of applying/ calling DRC or its partner for legal assistance?',
      delayOpinion:
        'In your opinion, if the legal assistance was not immediately given to you, was the delay from DRC and its partners, or because of your personal circumstance?',
      consideration:
        'Did you feel that your personal situation was taken into consideration during the provision of legal assistance?',
      listened:
        'Do you feel that the lawyer listened actively to your case and responded to your questions during the counselling or legal assistance?',
      difficultiesLawyer: 'Did you encounter any difficulties with your lawyer?',
      peopleExcluded:
        'Do you know of people in your Hromada/ Raion who are in need of legal assistance/ services who were excluded from the services provided?',
      peopleSpecify: 'If you know excluded people, specify',
    },
    _mealVerif: {
      numericToleranceMargin: 'Tolerance margin',
      activityForm: 'Activity form',
      verificationForm: 'Verification form',
      showBoth: 'Show side by side',
      koboForm: `Kobo form`,
      newRequest: 'New request',
      requested: 'Request created!',
      verified: 'Verified',
      notVerified: 'Not verified',
      requestTitle: 'Meal Verification Request',
      selectedKoboForm: 'Selected Kobo form',
      duplicateErrors: (ids: string[]) => `Duplicate IDs found: ${ids.join(', ')}.`,
      selectedData: (n: number) => `You selected <b>${n}</b> rows`,
      sampleSizeN: (n: number) => `MEAL team will verify ${n}%`,
      sampleSize: 'Sample size',
      dataToBeVerified: (n?: number) => `<b>${n ?? '-'}</b> rows to be verified`,
      // sampleSize: 'Sample Size',
      applyFilters: 'Use table filters to selected data that must be verified.',
      selectedNRows: (n: number) => `Select ${n} rows`,
      giveANameToId: 'Give a name to identify this set of verifications',
      giveDetails: 'Give some details',
      allIndicators: 'Indicators',
      allValidIndicators: 'Valid indicators',
      allErrorIndicators: 'Invalid indicators',
      valid: 'Validity',
      viewRegistrationData: 'View Registration Data',
      viewDataCheck: 'View Verification Data',
    },
    _meta: {
      distinctBySubmission: 'By submission',
      distinctByTaxId: 'By tax ID',
      distinctByPhone: 'By phone number',
      refresh: 'Sync',
      killCache: 'Clear cache',
      refreshLong: 'Refresh started, can takes few minutes.',
      pluggedKobo: 'Plugged Kobo',
    },
    protHHS2: {
      freedomOfMovement: 'Barriers to Freedom of Movement',
      _hhComposition: {
        girl: '1 or + girls 0-17',
        boy: '1 or + boys 0-17',
        adultFemale: '1 or + adult females 18-60',
        adultMale: '1 or + adult males 18-60',
        olderFemale: '1 or + older females 60+',
        olderMale: '1 or + older males 60+',
      },
      hhComposition: 'HH Composition',
      factorToHelpIntegration: 'Factors Supporting Integration',
      factorToReturn: 'Factors influencing intentions to return',
      reasonForRelocate: 'Reasons for relocating',
      hhTypes: 'Household Status',
      reportedIncidents: 'Reported incidents over the last 6 months',
      hhsAffectedByMultipleDisplacement: 'Multiple displacements since February 24 2022 by current oblast',
      barriersToAccessHealth: 'Barriers to access healthcare',
      hhWithMemberHavingDifficulties: 'HHs reporting member(s) with disability',
      factors: 'Factors',
      unregisteredDisability: 'Unregistered disability',
      wg_using_your_usual_language_have_difficulty_communicating: 'Using your usual (customary) language',
      reducing_consumption_of_food: 'Reducing consumption of food',
      unemploymentFactors: 'Factors affecting employment ',
      timelineOfIncident: 'Timeline of Incident',
      protectionIncidents: 'Protection incidents',
      disabilityAndHealth: 'Disability & Health',
      descTitle: `Protection monitoring`,
      desc: `is defined as "systematically and regularly collecting, verifying and analysing information over an extended period of time
        in order to identify violations of rights and protection risks for populations of concern for the purpose of informing effective responses".
      `,
      disclaimer: `
        The dashboard was created by the Danish Refugee Council (DRC), and funded by USAID's Bureau for Humanitarian Assistance (BHA)
        and the European Union. Views and opinions expressed are however those of the author(s) only and do not necessarily reflect
        those of the European Union or the BHA. Neither the European Union nor the BHA can be held responsible for any use of the dashboard.
      `,
      mainConcernsRegardingHousing: 'Concerns related to current accommodation',
      typeOfIncident: 'Type of incident',
      poorRelationshipWithHostCommunity: 'Poor intercommunity relationships',
      poorSenseOfSafety: 'Poor sense of safety',
      reasonForLeaving: 'Factors influencing departure',
      safetyAndSecurity: 'Safety & Security',
      reasonForRemainInOrigin: 'Reason for remaining in the area of origin',
      familyMemberSeparated: 'HHs with separated member(s)',
      locationOfSeparatedFamilyMembers: 'Location of separated family member(s)',
      residentialIntentionsByHousehold: 'Residential Intentions by Household',
      mainSourceOfIncome: 'Main source of income',
      hhOutOfWorkAndSeekingEmployment: 'HHs with member(s) out of employment',
      ethnicMinorities: 'Ethnic minorities',
      accessBarriersToObtainDocumentation: 'Access barriers to obtain documentation',
      registrationAndDocumention: 'Registration & Documentation',
      missingDocumentationByOblastPopulation: 'Missing Documentation by Oblast Population',
      HHSwSN: 'Head of HH with specific needs',
      specificNeedsToHHS: 'Specific needs of HH',
      safetyOrSecurityConcernsDuringDisplacement: 'HHs reporting security concerns during displacement',
      HHs: 'HHs',
      AvgHHSize: 'AvgHHSize',
    },
    protection_gbv_survey: {
      priorityNeeds: 'Priority training needs',
      respondents: 'Interest in training on working w/ families at risk of gbv',
      topic: 'Topic that would be useful for trainings',
      yes: 'yes',
      no: 'no',
      pna: 'prefer not to say',
      npn: 'Training needs',
      preferences: 'Preferences on the training model',
      modality: 'Preferences on modality',
      believe: 'Need for MH & psychosocial support',
      overwhelm: 'Feeling overwhelmed/stressed due to workload',
      departments: 'Number of respondents by departments',
      community: 'Number of respondents by hromada',
    },
    safety: {
      alerts: 'Alerts',
      alertType: 'Alert',
      minusRusLabel: {
        prisoners: 'Prisoners',
        killed: 'Killed',
        aircraft: 'Aircraft',
        armored_combat_vehicles: 'Armored combat vehicles',
        artillery: 'Artillery',
        helicopters: 'Helicopters',
        wounded: 'Wounded',
        ships_boats: 'Ships boats',
        tanks: 'Tanks',
      },
      casualties: 'Casualties of War',
      minusRusTitle: 'Intensity Proxy',
      dataTakenFromMinusRus:
        'Data extracted in real-time from <a class="link" target="_blank" href="https://www.minusrus.com/en">https://www.minusrus.com/en</a>.',
      aggravatingFactors: 'Aggravating factors',
      lastAttacks: 'Last attacks',
      incidentTrackerTitle: 'Incidents dashboard',
      incidents: 'Incidents',
      incident: 'Incident',
      attackOfOn: (oblast?: OblastISO, type?: string[]) =>
        `${type?.map(capitalize).join(' and ') ?? ''}${type ? ' a' : 'A'}ttack${oblast ? ` in ${OblastIndex.byIso(oblast).name}` : ''}`,
      attackTypes: 'Attack type',
      attacks: 'Attacks',
      attack: 'Attack',
      attackType: 'Attack type',
      green: 'Green',
      blue: 'Blue',
      yellow: 'Yellow',
      red: 'Red',
      dead: 'Dead',
      injured: 'Injured',
      typeOfCasualties: 'Type of casualties',
      target: 'Target',
    },
    hdp: {
      assistance: 'Assistance',
      incidents: 'Incidents',
      location: 'Location by',
    },
    snapshotProtMonito: {
      basicNeeds: `Basic Needs`,
      livelihood: `Livelihoods & Coping mechanisms`,
      safetyProtectionIncidents: 'Safety & Major Stress Factors',
      MainProtectionNeeds: 'Main Protection Needs',
      displacementDesc: `Majority of the IDPs surveyed during the monitoring period reported having left their place of habitual residence between February and May 2022. Main factors influencing departure reported included shelling and attacks on civilians, destruction or damage of housing, land or property due to conflict, as well as occupation of property, exposure to UXOs/landmines and lack of access to livelihoods.`,
      integrateIntoTheLocalCommunity: 'Integrate into the local community',
      monitoredHhByOblast: 'Monitored HH By Oblast',
    },
    protHHSnapshot: {
      maleYoung: `Males 25-60 years old`,
      avgHhSize: (n: number) => `Average HH size: ${n.toFixed(1)}`,
      noAccommodationDocument: 'HHs without formal lease agreement',
      maleWithoutIDPCert: 'Unregistered IDPs',
      titles: {
        document: 'Registration & Documentation',
        livelihood: 'Livelihood',
        needs: 'Specific needs and priorities',
        safety: `Safety & Security`,
      },
      title: 'Protection Monitoring Snapshot',
      title2: 'Ukraine',
    },
    sort: 'Sort',
    hardRefresh: 'Hard refresh',
    amount: 'Amount',
    target: 'Target',
    amountUAH: 'Amount UAH',
    amountUSD: 'Amount USD',
    date: 'Date',
    validFrom: 'Valid from',
    expiry: 'Expiry',
    departureFromAreaOfOrigin: `Displacement from area of origin`,
    displacementAndReturn: 'Displacement and Return Figures',
    returnToOrigin: `Return to area of origin`,
    dateOfDeparture: `Date of departure`,
    pin: 'Pin',
    warehouse: 'Warehouse',
    year: 'Year',
    vehicule: 'Vehicule',
    koboForm: 'Kobo form',
    koboForms: 'Kobo forms',
    disability: 'Disability',
    otherKoboForms: 'Other Kobo forms',
    _wfpDeduplication: {},
    _partner: {
      residualRisk: 'Residual Risk',
      vetting: 'Vetting',
      rapidMobilization: 'Rapid mobilization',
      relationship: 'Relationship',
      percentByTypeOfOrg: '% of Partner types',
      targetedMinorities: 'Targeted Minorities',
      benefReached: 'Total beneficiaries reached',
      benefPwdReached: 'Beneficiaries PwD reached',
      totalBudget: 'Total budget allocated',
      partners: 'Partners',
      sgas: 'SGAs',
      ongoingGrant: 'Ongoing grants',
      workingOblast: 'Working oblast',
      equitable: 'Equitable partnerships',
      partiallyEquitable: 'Partially equitable partnerships',
      womenLedOrganization: `Focused on women's right out of women-led org`,
      youthLedOrganization: `Focused on children out of youth-led org`,
      elderlyLedOrganization: `Focused on elders or PwD`,
    },
    mpca: {
      eskAllowance: 'ESK allowance',
      deleteTracker: 'Delete tracker?',
      deleteTrackerDetails: `It won't delete any data and you can recreate the tracker later.`,
      errorFormAlreadyExists: 'This tracked already exists.',
      addTracker: `Add tracker`,
      duplicationCheck: 'Duplication check',
      pullLastDataDesc: 'Get last Kobo submissions and rebuild the database.',
      committed: 'Committed',
      commit: 'Commit',
      projectOverride: 'Project override',
      projectFinal: 'Project Final',
      assistanceByLocation: 'Assistance by location',
      suggestionDurationInMonths: 'Suggested duration',
      drcSupportSuggestion: {
        FullUnAgency: 'Full assistance - UN Agency',
        FullNoDuplication: 'Full assistance - No duplication',
        Partial: 'Partial assistance',
        NoAssistanceFullDuplication: 'No assistance - Full duplication',
        NoAssistanceExactSameTimeframe: 'No assistance - Exact same timeframe',
        NoAssistanceDrcDuplication: 'No assistance - DRC duplication',
        DeduplicationFailed: 'Deduplication failed',
      },
      uploadWfpTaxIdMapping: 'Upload Tax IDs',
      existingOrga: 'Existing orga',
      existingAmount: 'Existing amount',
      existingStart: 'Existing start',
      existingEnd: 'Existing end',
      signatory: 'Signatory',
      headOfOperations: 'Head of Operations',
      financeAndAdministrationOfficer: 'Finance and Administration officer',
      cashAndVoucherAssistanceAssistant: 'Cash and Voucher Assistance assistant',
      generateDeduplicationFile: 'Generate WFP file',
      makePaymentTool: 'Make Payment Tool',
      deduplicationCheck: 'Deduplication',
      budgetLineCFR: 'Budget Line CFR',
      budgetLineMPCA: 'Budget Line MPCA',
      budgetLineStartUp: 'Budget Line StartUp',
      mpcaGrantAmount: 'MPCA grant amount',
      cfrGrantAmount: 'CFR grant amount',
      startupGrantAmount: 'Start-up grant amount',
      status: {
        Deduplicated: 'Deduplicated',
        PartiallyDeduplicated: 'Partially deduplicated',
        NotDeduplicated: 'Not deduplicated',
        Error: 'Error',
      },
    },
    _koboDatabase: {
      mergedDb: 'Merged DB',
      autoEmail: 'Auto Email',
      autoEmailDesc: 'Emails are sent to recipients on submission or column updates via Kobo or InfoPortal',
      isArchived: 'This form is archived.',
      translation: 'Translation',
      newValue: 'New value',
      oldValue: 'Old value',
      koboQuestion: 'Kobo question',
      deleted: 'Deleted',
      customColumn: 'Custom column',
      currentlyDisplayed: `columns displayed`,
      tagNotUpdated: 'Failed to update tag. Reloading clean data set...',
      downloadAsXLS: 'Download <b>filtered data</b> as XLS',
      importFromXLS: 'Import from XLS',
      registerNewForm: 'Register new form',
      repeatAs: 'Show Grouped questions as',
      repeatAsColumn: 'New columns',
      // repeatAsColumnDesc: 'Display each group question in a dedicated column.',
      repeatAsRows: 'New rows',
      repeatDont: `Squashed in 1 column`,
      repeatAsQuestionName: 'Select group to repeat',
      // repeatAsRowDesc: '',
      title: (form?: string) => `Kobo Database${form ? `: <b>${form}</b>` : ``}`,
      showAllQuestions: 'Show unanswered questions',
      pullData: `Synchronize last Kobo data.`,
      pullDataAt: (lastUpdate: Date) =>
        `Synchronize Kobo data.<br/>Last synchronization: <b>${formatDateTime(lastUpdate)}</b>.`,
      valueNoLongerInOption: 'This value is no longer in the options list',
      noAccessToForm: `You don't have access to any database.`,
      openKoboForm: 'Open Kobo form',
    },
    _cfm: {
      dataComingFromExternalForm: 'Data coming from external form',
      mainFp: 'Main focal points',
      benefOrigin: 'Beneficiary origin',
      requestByOblast: 'Requests by Oblast',
      additionalInformation: 'Details',
      deleteWarning: `In case of mistake, you can still recover deleted data by contacting ${appConfig.contact}.`,
      _feedbackType: {
        thanks: 'Thanks',
        thanks_event: 'Thanks event',
        feedback: 'Feedback',
        request: 'Request',
        complaint: 'Complaint',
      },
      subcat: 'Subcategory',
      priority: 'Rank',
      openTicketsHigh: 'High priority',
      openTickets: 'Open tickets',
      referralMatrix: 'Referral Matrix',
      feedback: 'Feedback',
      feedbackType: 'Category',
      feedbackTypeExternal: 'Feedback type',
      contactAgreement: 'Contact agreement',
      existingDrcBeneficiary: 'Existing DRC beneficiary',
      reporterDetails: 'Reporter information',
      formLong: {
        Internal: 'Internal Form',
        External: 'External Form',
      },
      formFrom: {
        Internal: 'From Internal form',
        External: 'From External form',
      },
      form: {
        Internal: 'Internal',
        External: 'External',
      },
      status: {
        Close: 'Close',
        Open: 'Open',
        Processing: 'Processing',
      },
    },
    _admin: {
      createGroup: 'Create groupDisplay',
    },
    _shelter: {
      assignedContractor: 'Assigned contractors',
      assessmentLocations: 'Assessments locations',
      repairCost: 'Total repairs cost',
      repairCostByHh: 'Repairs cost by HH',
      workDoneAt: 'Work done at',
      repairStandards: 'Compliance with technical and performance standards',
      workDoneStart: 'Work done start',
      scoreLevel: 'Price level',
      priceLevel: 'Price level',
      roofSum: 'Σ Roof (m2)',
      windowsSum: 'Σ Window (pc)',
      doorsSum: 'Σ Door (pc)',
      agreement: 'Agreement',
      workOrder: 'Work order',
      contractor: 'Contractor',
      contractor1: 'Contractor lot 1',
      contractor2: 'Contractor lot 2',
      contractor3: 'Contractor lot 3',
      contractor4: 'Contractor lot 4',
      lot1: 'Lot 1',
      lot2: 'Lot 2',
      lot3: 'Lot 3',
      ntaForm: 'NTA form',
      taForm: 'TA form',
      taRefOk: 'Correct reference or not filled TA',
      taRefNok: 'Wrong NTA reference in TA',
      taFilled: 'TA form filled',
      taNotFilled: 'TA form NOT filled',
      validationStatus: 'Accepted?',
      progressStatus: 'Status',
      documentType: 'Doc type',
      owner: 'Tenant',
      ownershipDocumentExist: 'Ownership docs exist',
      ownershipDocument: 'Ownership docs',
      accommodation: 'Accommodation',
      total: 'Total',
      apartmentnumber: 'Apartment Number',
      scoreDamage: 'Damage Score',
      scoreSocio: 'Socio',
      scoreDisplacement: 'Displ.',
      settlement: 'Settlement',
      street: 'Street',
      damageCondition: 'What is the Condition of the Building / Apartment',
      progress: {
        ContractorVisitDone: 'Contractor visit done',
        WorkEstimatesReceived: 'Work estimates received',
        PurchaseRequestDone: 'Purchase Request Done',
        WorkOrderDone: 'Work Order Done',
        RepairWorksStarted: 'Repair works Started',
        RepairWorksCompleted: 'Repair works completed',
        // ContractorInvoiceReceived: 'Contractor invoice received',
        // HandoverCertificateOfCompletionSigned: 'Handover/Certificate of completion signed',
        // InvoicePaymentProcessed: 'Invoice payment processed',
      },
      standards: {
        yes: 'Yes',
        no: 'No',
      },
    },
    note: 'Note',
    projectCode: 'Project Code',
    form: 'Form',
    koboId: 'Kobo _id',
    desc: 'Desc',
    viewNMore: (n: number) => `View ${n} more`,
    viewNLess: (n: number) => `View ${n} less`,
    viewMore: 'More',
    viewLess: 'Less',
    timeConsumingOperation: 'Time consuming operation.',
    sector: 'Sector',
    showDummyAccounts: 'Show dummy accounts',
    filterBlanks: 'Filter blanks',
    total: 'Total',
    shouldDelete: 'Delete?',
    remove: 'Delete',
    sync: 'Sync',
    pullLast: 'Pull last',
    pullLastTitle: 'Pull last',
    beneficiaries: 'Beneficiaries',
    disability_: {
      [Person.WgDisability.See]: 'Seeing',
      [Person.WgDisability.Hear]: 'Hearing',
      [Person.WgDisability.Walk]: 'Walking/Climbing steps',
      [Person.WgDisability.Rem]: 'Remembering or concentrating',
      [Person.WgDisability.Care]: 'With self-care',
      [Person.WgDisability.Comm]: 'Communicating',
      [Person.WgDisability.None]: 'None',
    },
    ...(() => {
      const activities_: Record<DrcProgram, string> = {
        CashForFuel: 'Cash for Fuel',
        CashForUtilities: 'Cash for Utilities',
        CashForRent: 'Cash for Rent',
        CashForRepair: 'Cash for Repair',
        CashForEducation: 'Cash for Education',
        MPCA: 'MPCA',
        NFI: 'NFI',
        ShelterRepair: 'Shelter Repair',
        Referral: 'Referral',
        ESK: 'ESK',
        InfantWinterClothing: 'Infant winter clothing',
        HygieneKit: 'Hygiene kit',
        SectoralCashForAgriculture: 'Sectoral Cash for Agriculture',
        VET: 'Vocational training (VET)',
        MSME: 'MSME Grant & Coaching',
        SectoralCashForAnimalShelterRepair: 'Sectoral Cash for Animal shelter repair',
        SectoralCashForAnimalFeed: 'Sectoral Cash for Animal feed',
        Counselling: 'Counselling',
        PSS: 'PSS',
        ProtectionMonitoring: 'Protection Monitoring',
        AwarenessRaisingSession: 'Awareness Raising',
        CommunityLevelPm: 'Community Level PM',
        Legal: 'Legal',
        FGD: 'FGD',
        Observation: 'Observation',
        WGSS: 'WGSS Activities',
        DignityKits: 'Distribution of dignity kits',
        CapacityBuilding: 'Capacity-building',
        CaseManagement: 'Case Management',
        LegalAid: 'GBV Legal Aid',
        MHPSSActivities: 'MHPSS awareness session',
        PsychosocialGroupSession: 'Psychosocial groupDisplay session',
        PsychosocialIndividualSession: 'Psychosocial Individual Session',
        PsychologicalFirstAid: 'Psychological First Aid',
        TIA: 'TIA',
        PeerToPeerTraining: 'Peer-to-peer training',
      }
      const activitiesMerged_: Partial<Record<DrcProgram, string>> = {
        ...activities_,
        ShelterRepair: 'Shelter Repair',
        Referral: 'Referral',
        ESK: 'ESK',
        InfantWinterClothing: 'NFI',
        HygieneKit: 'NFI',
        SectoralCashForAgriculture: 'Sectoral Cash for Agriculture',
        SectoralCashForAnimalShelterRepair: 'Sectoral Cash for Agriculture',
        SectoralCashForAnimalFeed: 'Sectoral Cash for Agriculture',
        CommunityLevelPm: 'Protection Monitoring',
        FGD: 'Protection Monitoring',
        Observation: 'Protection Monitoring',
      }
      return {activities_, activitiesMerged_}
    })(),
    nfi_: {
      HKF: 'Family Hygiene Kits',
      NFKF_KS: 'Family NFI kits',
      FoldingBed: 'Folding Bed',
      FKS: 'Family Kitchen Set',
      CollectiveCenterKits: 'Collective Center kit',
      BK: 'Baby Kit',
      WKB: 'Baby Winter Kits',
      HKMV: 'Family Hygiene Kits for moving IDPs',
      ESK: 'Emergency Shelter Kit',
    },
    importData: {
      create: 'Upload New Data',
      update: 'Update Existing Data',
      generate: 'Generate Excel Template',
    },
    docsTitle: 'Documentation',
    riskEducation: {
      sectionTitle: 'Risk Education',
      sessionsNumber: 'Number of sessions',
      individualsReached: 'Individuals reached',
    },
  },
})
