import {PrismaClient} from '@prisma/client'
import {KoboSdkGenerator} from '../../feature/kobo/KoboSdkGenerator'
import {scriptConf} from '../ScriptConf'
import {KoboAnswer, KoboIndex, Meal_cashPdm, Meal_pdmStandardised} from '@infoportal-common'
import {fnSwitch} from '@alexandreannic/ts-utils'
import {PromisePool} from '@supercharge/promise-pool'

export const migratePdmCash = (async () => {
  const config = {
    mpcaId: KoboIndex.byName('meal_pdmStandardised').id,
    cashId: KoboIndex.byName('meal_cashPdm').id,
  }

  const prisma = new PrismaClient()
  const sdk = await new KoboSdkGenerator(prisma).get(scriptConf.kobo.prod.serverId)

  const oldData = await sdk.v2.getAnswers(config.mpcaId).then(_ => _.data as KoboAnswer<Meal_pdmStandardised.T>[])
  const mappedData = oldData.map(_ => dataMap(_))
  let done = 0
  await PromisePool.withConcurrency(1).for(mappedData).process(async (data, i) => {
    done++
    console.log(done.toString().padStart(4, ' ') + ' / ' + mappedData.length)
    await sdk.v1.submit({
      formId: config.cashId,
      data: mappedData[i],
    })
  })
})

const dataMap = (row: KoboAnswer<Meal_pdmStandardised.T>): Record<string, any> => {
  const answer = row.answers
  return {
    start: row.start,
    end: row.end,
    date: row.submissionTime,
    auto_imported: 'aCWKwfvJ6F48HxUZTrr9L7/' + row.id,
    metadata: {
      interviever_name: answer.interwiever_name,
      date_interview: row.submissionTime,
      donor: 'other',
      donor_other: answer.donor,
      office: answer.office,
      unique_number: answer.unique_number,
      not_loc: answer.not_loc,
      ben_det_oblast: answer.ben_det_oblast as Meal_cashPdm.Option<'ben_det_oblast'>,
      ben_det_raion: answer.ben_det_raion,
      ben_det_hromada: answer.ben_det_hromada,
      place_distribution: undefined,
    },
    overview: {
      age: answer.age,
      sex: answer.sex as Meal_cashPdm.Option<'sex'>,
      status_person: fnSwitch(answer.status_person!, {
        yesidp: 'idp',
        yescap: 'long',
      }, () => undefined),
      how_many_family: answer.how_many_family,
      number_female: answer.family?.filter(_ => _.repgender === 'female').length,
      number_male: answer.family?.filter(_ => _.repgender === 'male').length,
      number_disabilities: undefined,
      did_receive_cash: answer.did_receive_cash!,
      did_receive_cash_no: answer.did_receive_cash_no,
      pdmtype: answer.pdmtype ? [answer.pdmtype as Meal_cashPdm.Option<'pdmtype'>] : [],
      not_mpca: answer.not_mpca,
      not_cash_for_rent: answer.not_cash_for_rent,
      not_cash_for_repair: answer.not_cash_for_repair,
    },
    ic: {
      agree_interviewed: answer.agree_interviewed as Meal_cashPdm.Option<'any_member_household'>,
      spent_cash_assistance_received: 'yes',
      spent_cash_assistance_received_no: undefined,
      spent_cash_assistance_received_no_mait_reason: undefined,
      spend_cash_received: 'yes',
    },
    use_mpca_assistance: {
      sectors_cash_assistance: answer.sectors_cash_assistance as Meal_cashPdm.Option<'sectors_cash_assistance'>[],
      sectors_cash_assistance_other: answer.sectors_cash_assistance_other,
      sectors_cash_assistance_food: answer.sectors_cash_assistance_food,
      sectors_cash_assistance_hh_nfis: undefined,
      sectors_cash_assistance_clothing: answer.sectors_cash_assistance_clothing,
      sectors_cash_assistance_heating: answer.sectors_cash_assistance_utilities_heating,
      sectors_cash_assistance_healthcare: answer.sectors_cash_assistance_healthcare,
      sectors_cash_assistance_utilities: undefined,
      sectors_cash_assistance_renovation_materials: undefined,
      sectors_cash_assistance_rent: undefined,
      sectors_cash_assistance_agricultural_inputs: undefined,
      sectors_cash_assistance_hygiene_items: answer.sectors_cash_assistance_hygiene_items,
      sectors_cash_assistance_medication: undefined,
      sectors_cash_assistance_education_materials: undefined,
      sectors_cash_assistance_other_001: undefined,
      receive_additional_5000: undefined,
    },
    delivery_process: {
      assistance_delivered: answer.assistance_delivered as Meal_cashPdm.Option<'assistance_delivered'>,
      assistance_delivered_other: answer.assistance_delivered_other,
      satisfied_process: answer.satisfied_process as Meal_cashPdm.Option<'satisfied_process'>,
      satisfied_process_no: answer.satisfied_process_no,
      satisfied_cash_amount: answer.satisfied_cash_amount as Meal_cashPdm.Option<'any_member_household'>,
      amount_cash_received_correspond: undefined,
      amount_cash_received_correspond_yes: undefined,
      time_registered_assistance: undefined,
      experience_problems: answer.experience_problems,
      experience_problems_yes: answer.experience_problems_yes ? [answer.experience_problems_yes] : [],
      assistance_delivered_other_001: answer.assistance_delivered_other_001,
      organization_provide_information: answer.organization_provide_information as Meal_cashPdm.Option<'any_member_household'>,
      better_inform_distribution: [answer.better_inform_distribution] as Meal_cashPdm.Option<'better_inform_distribution'>[],
      better_inform_distribution_other: answer.better_inform_distribution_other,
    },
    sufficiency: {
      amount_paid_april: undefined,
      amount_paid_april_no: undefined,
      amount_paid_april_long: undefined,
      amount_paid_april_long_other: undefined,
      level_heating_improved: undefined,
      level_heating_improved_dec_other: undefined,
      type_fuel_most: undefined,
      type_fuel_most_other: undefined,
      received_feed_livestock_winter: undefined,
      received_feed_livestock_winter_no: undefined,
      received_feed_livestock_winter_long: undefined,
      received_feed_livestock_winter_no_other: undefined,
      amount_received_renovation_shelter: undefined,
      amount_received_renovation_shelter_no: undefined,
      completed_renovation_livestock: undefined,
      completed_renovation_livestock_no: undefined,
      completed_renovation_livestock_no_other: undefined,
      plan_finish_renovation: undefined,
      type_renovation: undefined,
      type_renovation_other: undefined,
      received_enough_agricultural_needs: undefined,
      received_enough_agricultural_needs_no: undefined,
      received_enough_agricultural_needs_long: undefined,
      received_enough_agricultural_needs_long_other: undefined,
      rent_benefit: answer.rent_benefit as Meal_cashPdm.Option<'any_member_household'>,
      rent_benefit_no: answer.rent_benefit_no,
      access_adequate_housing: answer.access_adequate_housing as Meal_cashPdm.Option<'any_member_household'>,
      improve_living: answer.improve_living as Meal_cashPdm.Option<'improve_living'>,
      improve_living_other: answer.improve_living_other,
      spent_cash_assistance: answer.spent_cash_assistance as Meal_cashPdm.Option<'any_member_household'>,
      spent_cash_assistance_yes: answer.spent_cash_assistance_yes,
      spent_cash_assistance_rent: answer.spent_cash_assistance_rent as Meal_cashPdm.Option<'assistance_other_repairs_rate'>,
      money_received: answer.money_received as Meal_cashPdm.Option<'money_received'>,
      money_received_other: answer.money_received_other,
      assistance_enough: answer.assistance_enough as Meal_cashPdm.Option<'any_member_household'>,
      assistance_enough_no: answer.assistance_enough_no,
      who_assisted: answer.who_assisted as Meal_cashPdm.Option<'who_assisted'>,
      who_assisted_other: answer.who_assisted_other,
      assistance_other_repairs: answer.assistance_other_repairs as Meal_cashPdm.Option<'any_member_household'>,
      assistance_other_repairs_yes: answer.assistance_other_repairs_yes,
      assistance_other_repairs_rate: answer.assistance_other_repairs_rate as Meal_cashPdm.Option<'assistance_other_repairs_rate'>,
      cash_assistance_timely: undefined,
      brochure_provided: answer.brochure_provided as Meal_cashPdm.Option<'brochure_provided'>,
    },
    income_generation: {
      food_expenditures_assistance: undefined,
      food_expenditures_assistance_inc_dec: undefined,
      food_expenditures_assistance_inc: undefined,
      food_expenditures_assistance_other: undefined,
      household_increase_decrease_livestock_receiving: undefined,
      household_increase_decrease_livestock_receiving_inc_dec: undefined,
      household_increase_decrease_livestock_receiving_decreased: undefined,
      household_increase_decrease_livestock_receiving_other: undefined,
      comparison_last_year: undefined,
      comparison_last_year_other: undefined,
      consume_majority_crops: undefined,
      consume_majority_crops_no: undefined,
      opportunity_sell_production_excesses: undefined,
      opportunity_sell_production_excesses_no: undefined,
      after_assistance_natural_products: undefined,
      after_assistance_natural_products_inc_dec: undefined,
      after_assistance_natural_products_dec: undefined,
      after_assistance_natural_products_other: undefined,
      contacted_pay_amount: undefined,
      contacted_pay_amount_tax_local: undefined,
    },
    ability_cover_bn: {
      currently_able_basic_needs: undefined,
      household_currently_have_clothing: answer.household_currently_have_clothing as Meal_cashPdm.Option<'any_member_household'>,
      household_currently_have_clothing_no: undefined,
      household_currently_have_clothing_no_other: undefined,
      enough_water_household: undefined,
      enough_water_household_no: undefined,
      two_weeks_household: answer.two_weeks_household as Meal_cashPdm.Option<'two_weeks_household'>,
    },
    coping_strategies: {
      resort_any_following: undefined,
      lcs_sell_hh_assets: undefined,
      lcs_spent_savings: undefined,
      lcs_forrowed_food: undefined,
      lcs_eat_elsewhere: undefined,
      lcs_sell_productive_assets: undefined,
      lcs_reduce_health_expenditures: undefined,
      lcs_reduce_education_expenditures: undefined,
      lcs_sell_house: undefined,
      lcs_move_elsewhere: undefined,
      lcs_degrading_income_source: undefined,
      lcs_ask_stranger: undefined,
      lcs_reason: undefined,
      lcs_reason_other: undefined,
    },
    outcome: {
      extent_household_basic_needs: undefined,
      extent_household_basic_needs_define: undefined,
      basic_needs_unable_fulfill_bha345: undefined,
      basic_needs_unable_fulfill_other_bha345: undefined,
      basic_needs_unable_fully_reason_bha345: undefined,
      basic_needs_unable_fully_reason_other_bha345: undefined,
      feel_safe_travelling: answer.feel_safe_travelling as Meal_cashPdm.Option<'know_address_suggestions'>,
      feel_safe_travelling_bad: answer.feel_safe_travelling_bad,
      feel_treated_respect: answer.feel_treated_respect as Meal_cashPdm.Option<'know_address_suggestions'>,
      feel_treated_respect_bad: undefined,
      satisfied_assistance_provided: fnSwitch(answer.rate_quality_assistance!, {
        rtvs: 'rcyc',
        rtsf: 'rcmy',
        rtds: 'rcnr',
        rtvd: 'rcnt',
      }, () => undefined),
      satisfied_assistance_provided_bad: undefined,
      know_people_needing: answer.know_people_needing as Meal_cashPdm.Option<'know_address_suggestions'>,
      know_people_needing_yes: answer.know_people_needing_yes,
      feel_informed_assistance: undefined,
      feel_informed_assistance_bad: undefined,
      account_organization_assistance: undefined,
      account_organization_assistance_bad: undefined,
      where_are_staying: undefined,
      where_are_staying_other: undefined,
      sufficient_living_spaces: undefined,
      separate_space_adolescent_girls: undefined,
      shelter_safe_wind: undefined,
      issues_regarding_repaired: answer.issues_regarding_repaired as Meal_cashPdm.Option<'any_member_household'>,
      issues_regarding_repaired_yes: answer.issues_regarding_repaired_yes,
      shelter_assistance_return: answer.shelter_assistance_return as Meal_cashPdm.Option<'any_member_household'>,
      shelter_assistance_return_no: answer.shelter_assistance_return_no,
      planning_staying_repaired: answer.planning_staying_repaired as Meal_cashPdm.Option<'planning_staying_repaired'>,
      planning_staying_repaired_other: answer.planning_staying_repaired_other,
      planning_staying_repaired_no: answer.planning_staying_repaired_no,
    },
    hi: {
      square_metres: answer.square_metres,
      sealed_bad_weather: undefined,
      access_running_water: answer.access_running_water as Meal_cashPdm.Option<'access_heating'>,
      access_hot_water: answer.access_hot_water as Meal_cashPdm.Option<'access_heating'>,
      access_washing_facilities: answer.access_washing_facilities as Meal_cashPdm.Option<'access_heating'>,
      access_sanitation_facilities: answer.access_sanitation_facilities as Meal_cashPdm.Option<'access_heating'>,
      access_heating: answer.access_heating as Meal_cashPdm.Option<'access_heating'>,
      property_draft_proofing: answer.property_draft_proofing as Meal_cashPdm.Option<'any_member_household'>,
      property_adequately_insulated: answer.property_adequately_insulated as Meal_cashPdm.Option<'any_member_household'>,
      property_double_glazed_windows: answer.property_double_glazed_windows as Meal_cashPdm.Option<'any_member_household'>,
      formal_agreement_landlord: answer.formal_agreement_landlord as Meal_cashPdm.Option<'any_member_household'>,
      access_external_locked: answer.access_external_locked as Meal_cashPdm.Option<'any_member_household'>,
      access_private_space: undefined,
      access_basic_electricity_gas: undefined,
    },
    safe: {
      rent_assistance_timely_manner: undefined,
      feel_place_secure: undefined,
      feel_place_secure_other: undefined,
      feel_place_secure_no: undefined,
      living_conditions_result: undefined,
      current_living_space: answer.current_living_space as Meal_cashPdm.Option<'any_member_household'>,
      access_basic_facilities: undefined,
      access_basic_facilities_no: undefined,
      living_conditions_deteriorated: undefined,
      living_conditions_deteriorated_no: undefined,
      assistance_dwelling_sufficiently: undefined,
      assistance_dwelling_sufficiently_no: undefined,
    },
    on: {
      receive_shelter_assistance: answer.receive_shelter_assistance as Meal_cashPdm.Option<'receive_shelter_assistance'>,
      receive_shelter_assistance_no: answer.receive_shelter_assistance_no,
      needs_community_currently: answer.needs_community_currently as Meal_cashPdm.Option<'needs_community_currently'>[],
      needs_community_currently_other: answer.needs_community_currently_other,
    },
    aap: {
      any_member_household: answer.any_member_household as Meal_cashPdm.Option<'any_member_household'>,
      any_member_household_yes: answer.any_member_household_yes,
      provide_someone_commission: answer.provide_someone_commission as Meal_cashPdm.Option<'provide_someone_commission'>,
      provide_someone_commission_yes: answer.provide_someone_commission_yes as Meal_cashPdm.Option<'provide_someone_commission_yes'>,
      provide_someone_commission_yes_other: answer.provide_someone_commission_yes_other,
      know_address_suggestions: fnSwitch(answer.know_address_suggestions!, {
        yes: 'rcyc',
        no: 'rcnt'
      }, () => undefined),
      know_address_suggestions_yes: answer.know_address_suggestions_yes as Meal_cashPdm.Option<'know_address_suggestions_yes'>,
      know_address_suggestions_yes_ndnp: answer.know_address_suggestions_yes_ndnp as Meal_cashPdm.Option<'know_address_suggestions_yes_ndnp'>,
      know_address_suggestions_yes_ndnp_other: answer.know_address_suggestions_yes_ndnp_other,
      know_address_suggestions_no: answer.know_address_suggestions_no as Meal_cashPdm.Option<'know_address_suggestions_no'>,
      know_address_suggestions_no_other: answer.know_address_suggestions_no_other,
      submitted_feedback_complaint: answer.submitted_feedback_complaint as Meal_cashPdm.Option<'submitted_feedback_complaint'>,
      comment: answer.comment,
    },
    not_thank: answer.not_thank,
  }
}
